#!/usr/bin/env node
// @ts-nocheck
'use strict';
const request = require('request');

const _timestamp = Date.now();
const args = process.argv.slice(2);

const SESSION_ID = args[0] || "000000";
const STATE = JSON.parse(args[1] || "{}");

const nlp = (name, message, context, callback, error = (x => x)) =>
	request({
		url: `http://localhost:8080/${name}`,
		method: 'POST',
		json: {
			user_input: message,
			content: context
		},
	}, (e, r, b) => {
		if (e)
			error(e);
		else
			callback(b);
	});
const send = msg => console.log(JSON.stringify(msg));
const response = (
	message = "",
	state = {},
	confidence = 1,
	idontknow = confidence < 0.5,
	component_done = confidence === 0,
	component_failed = confidence === -1) => {
	return {
		response: message,
		response_time: (Date.now() - _timestamp) / 1000,
		confidence: confidence,
		idontknow: idontknow,
		component_done: component_done,
		component_failed: component_failed,
		updated_context: state,
	};
};

const index = req => {
	nlp("duration", req.user_input, {}, entities => {
		send(response(JSON.stringify(entities), req.context));
	});
};

index(JSON.parse(args[1] || "{}"));
