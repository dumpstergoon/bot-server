#!/usr/bin/env node
// @ts-nocheck
'use strict';

const ømq = require("zeromq");
const request = require("request");
const { parse } = require("../../../utils");
const config = require("./config.json");

const render_error = config => {
	return `
Could not register "${config.name}".
${config.id} => ${config.uri} @ ${config.host} failed.
`;
};

const listen = async channel => {
	let message = parse(await channel.receive());
	console.log(message);

	listen(channel);
};

const index = async () => {
	const channel = new ømq.Reply;
	await channel.bind(config.uri);
	console.log("Bot component Ready. Sending request to register.");

	request.put({
		url: `${config.host}/${config.id}`,
		json: Object.assign(config, {
			actions: require("./responses.json")
		})
	}, (error, response, body) => {
		if (error)
			console.error(render_error(config)) || process.exit(1);
		
		console.log(`"${config.name}" has been registered at ${config.host}/${config.id}`);
		listen(channel);
	});
};

index();

/*pass_me: actions.pass("ask"),
		ask: actions.default("confirm"),

		confirm: actions.confirm("confirmed", "denied", "ask"),

		confirmed: actions.default("index"),
		denied: actions.default("exit"), */
