{
  "skycrate-verify-passphrase": {
    "host": "http://localhost:8080/exchange",
    "uri": "ipc://@skycrate-verify-passphrase",
    "id": "skycrate-verify-passphrase",
    "name": "Verify Passphrase",
    "vendor": "SkyCrate Ltd.",
    "version": "1.0.0-rc",
    "author": "Graham Robertson",
    "description": "Verify Passphrase is used to aid in the verification of a user's identity by testing their knowledge of a previously stored passphrase. The user is asked to identity three letters contained in the passphrase.",
    "languages": [
      {
        "language": "English",
        "regions": [
          "en-gb",
          "en-ca",
          "en-us"
        ]
      }
    ],
    "responses": {
      "ask_passphrase": [
        "Type the [index_one], [index_two], and [index_three] letters of your chosen passphrase. Enter this on its own as one word.",
        "Enter as a single word the [index_one], [index_two], and [index_three] letters of your stored passphrase."
      ],
      "passphrase_denied": [
        "Passphrase wasn't a match... try again.",
        "Didn't quite get that.",
        "Just the [index_one], [index_two], and [index_three] letters only please."
      ],
      "passphrase_verified": [
        "Thank you! Your passphrase has been verified.",
        "Brilliant. That's a match!"
      ],
      "forced_exit": [
        "Sorry. We cannot verify your passphrase this [time_of_day]."
      ],
      "exit": [
        "Ok. Let's forget about the passphrase."
      ]
    },
    "schema": {
      "response_variables": {
        "title": "Response Template Values",
        "description": "Values that you can use when customising the bot's responses.",
        "type": "object",
        "properties": {
          "index_one": {
            "description": "Describes the position of the first requested letter from the passphrase (eg. \"1st\").",
            "type": "integer"
          },
          "index_two": {
            "description": "Describes the position of the second requested letter from the passphrase (eg. \"3rd\").",
            "type": "integer"
          },
          "index_three": {
            "description": "Describes the position of the third requested letter from the passphrase (eg. \"6th\").",
            "type": "integer"
          },
          "time_of_day": {
            "description": "Depending on the current time, this value can be <em>\"morning\"</em>, <em>\"afternoon\"</em>, or <em>\"evening\"</em>.",
            "type": "string"
          }
        }
      },
      "request": {
        "title": "Exchange Body",
        "description": "Data to be sent with each POST request or Web Socket message.",
        "type": "object",
        "properties": {
          "user_input": {
            "description": "Message sent to bot by the user.",
            "type": "string"
          },
          "context": {
            "title": "Session Context",
            "description": "Auxillary information used by the bot to determine appropriate responses. Usually only needs to be sent on the first request.",
            "type": "object",
            "properties": {
              "passphrase": {
                "description": "A secret passphrase used to test a user's identity. Passphrase should be between 6 and 12 characters long but the only real limit is a minimum of 3 characters.",
                "type": "string"
              },
              "max_attempts": {
                "description": "<b>Optional.</b> Number of failed password attempts before the bot finishes and reports it has failed.<br /><br />Defaults to 3.",
                "type": "integer"
              },
              "datetime": {
                "description": "<b>Optional.</b> Provide context for the time of day. Can be used in responses: <code>\"Good [time_of_day]!\"</code>.<br /><br />Where <code>[time_of_day]</code> has the values <em>\"morning\"</em>, <em>\"afternoon\"</em>, and <em>\"evening\"</em> depending on the time provided.<br /><br />Defaults to current UTC time.",
                "type": "date"
              }
            },
            "required": "passphrase"
          }
        },
        "required": [
          "user_input",
          "context"
        ]
      },
      "response": {
        "title": "Exchange Response",
        "description": "The bot component response to your <em>exchange request</em>.",
        "type": "object",
        "properties": {
          "action": {
            "description": "The name of the action performed.",
            "type": "string"
          },
          "response": {
            "description": "Text response from bot component to be used in the chat.",
            "type": "string"
          },
          "response_time": {
            "description": "Time taken, in seconds, to complete the exchange.",
            "type": "number"
          },
          "confidence": {
            "description": "The confidence that this is the appropriate response. Value lies between <code>0</code> and <code>1</code>.",
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "out_of_context": {
            "description": "<code>True</code> if the bot receives input it feels was out of context. The bot has the ability to handle this but you might want to use this opportunity to intercept and do something else in your bot.",
            "type": "boolean"
          },
          "idontknow": {
            "description": "<code>True</code> if the bot did not understand the user input. The bot has the ability to handle this (eg re-phrasing a question or instruction). However, you might wish to try and understand the input yourself and either switch to another component or append a reply to what this component will say next.",
            "type": "boolean"
          },
          "component_failed": {
            "description": "<code>True</code> when the component is unable to complete its goal.",
            "type": "boolean"
          },
          "component_done": {
            "description": "<code>True</code> when the component has successfully fulfilled its goal. This is a good time to check the updated_context.",
            "type": "boolean"
          },
          "updated_context": {
            "title": "Updated Context",
            "description": "Any updated or new data from the bot.",
            "type": "object",
            "properties": {
              "verified": {
                "description": "<code>True</code> when the passphrase has been verified. You can use <code>component_done</code> and <code>component_failed</code> in lieu of this. Other components this may not be the case so it's good practice to have an explicit \"goal-accomplished\" boolean. We might have a few sub-goals or outcomes within one bot.",
                "type": "boolean"
              }
            }
          }
        }
      }
    }
  }
}
