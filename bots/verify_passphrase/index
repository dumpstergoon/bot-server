#!/usr/bin/env node
// @ts-nocheck
'use strict';

const INDICES = [
	'1st',
	'2nd',
	'3rd',
	'4th',
	'5th',
	'6th',
	'7th',
	'8th',
	'9th',
	'10th',
	// TODO: replace with algorithm
]

const {
	action,
	bot,
	bootstrap
} = require("../../component");

const rand = (a = 0, b = 1) => {
	return Math.round(Math.random() * (b - a)) + a;
};

const rand_item = list => {
	let index = rand(0, list.length - 1);
	return [index, list[index]];
};

const chunkify = (string = "", chunk_size = 2, output = []) => {
	if (!string.length)
		return output;
	let remainder = chunk_size * 2 - string.length;
	if (remainder > 0)
		chunk_size += remainder;
	output.push(string.slice(0, chunk_size));
	return chunkify(string.slice(chunk_size), chunk_size, output);
};

const verify = (passed, indices) =>
	indices.map(([index, letter]) => letter).join('') === passed;

const component = bot(
	require("./responses.json"),
	{
		// Component entry point...
		index: (msg, state, responses, send, route) => {
			let passphrase =
				state.context.passphrase =
					state.context.passphrase || 'hannah';
			
			let chunk_size = passphrase.length / 3;
			let groups = chunkify(
				passphrase,
				chunk_size
			);
			
			state.indices = groups.map((letters, index, groups) => {
				let [pos, letter] = rand_item(letters);
				return [
					index * Math.floor(chunk_size) + pos,
					letter
				]
			});
			console.log(state.indices);
			Object.assign(state.context, {
				// TODO: TO BE GENERATED IN INDEX FUNCTION
				index_one: INDICES[state.indices[0][0]],
				index_two: INDICES[state.indices[1][0]],
				index_three: INDICES[state.indices[2][0]],
			})

			route("ask_passphrase")
		},
		// Pop the question!
		ask_passphrase: action.default("verify_passphrase"),
		// Check our passphrase
		verify_passphrase: (msg, state, responses, send, route, pass) => {
			console.log('VERIFY >>', msg);
			if (verify(msg, state.indices)) {
				state.context.passphrase_verified = true;
				route("passphrase_verified");
			} else
				route("password_denied")
		},
		password_denied: action.pass("ask_passphrase"),
		passphrase_verified: action.exit(),
	});

// Hooks our bot into the appropriate IO:
bootstrap(component);
